# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
# 確認用
head(Setagaya.n)
#
Setagaya.n <- import("13112_Setagaya-ku01.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
# 確認用
head(Setagaya.n)
#
rm(incr)
guess_encoding("13112_Setagaya-ku05.csv") # ""内に確認するファイル名を入力
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
# 確認用
head(Setagaya.n)
#
View(Setagaya.n)
Setagaya.n
head(Setagaya.n)
head(Setagaya.n)
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer64))
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer))
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL","English") #Windowsにおけるエンコード問題解決用
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
#JASIDを整数型に
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer))
# 確認用
head(Setagaya.n)
#
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
#JASIDを整数型に
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
# 確認用
head()
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
#JASIDを整数型に
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
# 確認用
head()
LabelTemplate = import("ListLabel_template.csv", encoding = "UTF-8")
LabelList = names (Setagaya.n) #1行目を取得
LabelList #取得結果を表示
# 項目が過不足のチェック→過不足があればファイルを修正
if (length(LabelList) > length(LabelTemplate)){
print("多い")
} else if (length(LabelList) < length(LabelTemplate)){
print("不足")
} else {
print("OK")
}
colnames(Setagaya.n) <- colnames(LabelTemplate) #対象の列名をLabelTemplateの列名に置換
colnames(Setagaya.n) #確認用
Setagaya.n %>% <- select(,-11)
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
#JASIDを整数型に
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
# 確認用
head()
LabelTemplate = import("ListLabel_template.csv", encoding = "UTF-8")
LabelList = names (Setagaya.n) #1行目を取得
LabelList #取得結果を表示
# 項目が過不足のチェック→過不足があればファイルを修正
if (length(LabelList) > length(LabelTemplate)){
print("多い")
} else if (length(LabelList) < length(LabelTemplate)){
print("不足")
} else {
print("OK")
}
# 多い場合の処理
Setagaya.n <- select(Setagaya.n,-取得住所)
Setagaya.n <- select(Setagaya.n,-"取得住所")
colnames(Setagaya.n) <- colnames(LabelTemplate) #対象の列名をLabelTemplateの列名に置換
colnames(Setagaya.n) #確認用
Setagaya.coord <- import("13112_Setagaya-ku05_coord.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB_coord.csv", setclass= "tbl_df")：AAAにBBB_coord.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB_coord = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
# 確認用
head(Setagaya.coord)
#JASIDを整数型に
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
# 確認用
head()
nrow(Setagaya.n) #遺跡地図データの行数
nrow(Setagaya.coord) #座標データの行数
# チェック→不一致なら元データの確認と修正
if (nrow(Setagaya.n) == nrow(Setagaya.coord)){
print("OK")
} else {
print("不一致")
}
ctr <- 1:nrow(Setagaya.n) #行数だけ繰り返すカウンター
chk.counter <- 0 #TRUEカウンター
for (i in ctr){
if (Setagaya.n[i,1] == Setagaya.coord[i,1]){
chk.counter <- chk.counter + 1
}
}
if (chk.counter == nrow(Setagaya.n)){
print("OK")
} else {
print("不一致")
}
ctr <- 1:nrow(Setagaya.n) #行数だけ繰り返すカウンター
chk.counter <- 0 #TRUEカウンター
for (i in ctr){
if (Setagaya.n[i,1] == Setagaya.coord[i,1]){
chk.counter <- chk.counter + 1
} else {
print (chk.counter)
print ("不一致")
}
}
if (chk.counter == nrow(Setagaya.n)){
print("OK")
} else {
print("不一致")
}
Setagaya.coord <- select(Setagaya.coord,-JASID) #位置座標データからJASID列を削除
colnames(Setagaya.coord) <- c("経度","緯度") #位置座標データのラベルの正規化
colnames(Setagaya.coord)
Setagaya.comb <- cbind(Setagaya.n, Setagaya.coord)
Setagaya.comb %>%
head() %>%
colnames()
a <- 2
a %>%
<- a+2
a %>%
a <- +2
a %>%
a <- (,2)
a <- (2)
a
Setagaya.coord <- select(Setagaya.coord,-JASID) #位置座標データからJASID列を削除
Setagaya.coord <- select(Setagaya.coord,-JASID) #位置座標データからJASID列を削除
colnames(Setagaya.coord) <- c("経度","緯度") #位置座標データのラベルの正規化
colnames(Setagaya.coord)
Setagaya.comb <- cbind(Setagaya.n, Setagaya.coord)
Setagaya.comb %>%
head() %>%
colnames()
a <- c(1,2,3,4)
a
b <- c(5,6,7,8)
a %>%
rbind(b)
a
b
rbind(a,b)
a
b
a %>%
rbind(,b)
if(exists("Setagaya.total")){ #AAA.totalが存在している場合=2回目以降の実行の場合
before <- nrow(Setagaya.total) #統合前の行数=レコード数を取得
Setagaya.total <- rbind(Setagaya.total, Setagaya.comb)  #あらたに加工したリスト(AAA.comb)を全体リスト(AAA.total)に新規レコードとして追加
} else { #存在していない場合=最初の実行の場合
before <- 0  #統合前のレコード数は0
Setagaya.total <- Setagaya.comb #AAA.totalに遺跡地図情報+位置座標の統合リストを収納
}
after <- nrow(Setagaya.total) #統合後の行数=レコード数
def <- after - before
if (exists("incr")){
incr <- rbind(incr, data.frame(before,after,def))
} else {
incr <- data.frame(before,after,def)
}
incr #追加処理結果の表示: before=処理前のレコード数、after=処理後のレコード数、def=差分(増加数)
tail(Setagaya.total)
Setagaya.total %>% arrange(JASID)
head()
Setagaya.total %>%
arrange(JASID) %>%
head()
Setagaya.total %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
#JASIDで整列
arrange(JASID) %>%
# 確認用
head()
if(exists("Setagaya.total")){ #AAA.totalが存在している場合=2回目以降の実行の場合
before <- nrow(Setagaya.total) #統合前の行数=レコード数を取得
Setagaya.total <- rbind(Setagaya.total, Setagaya.comb)  #あらたに加工したリスト(AAA.comb)を全体リスト(AAA.total)に新規レコードとして追加
} else { #存在していない場合=最初の実行の場合
before <- 0  #統合前のレコード数は0
Setagaya.total <- Setagaya.comb #AAA.totalに遺跡地図情報+位置座標の統合リストを収納
}
after <- nrow(Setagaya.total) #統合後の行数=レコード数
def <- after - before
if (exists("incr")){
incr <- rbind(incr, data.frame(before,after,def))
} else {
incr <- data.frame(before,after,def)
}
incr #追加処理結果の表示: before=処理前のレコード数、after=処理後のレコード数、def=差分(増加数)
#JASIDを整数型に
Setagaya.total %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
#JASIDで整列
arrange(JASID) %>%
# 確認用
head()　 %>%
tail()
guess_encoding("13112_Setagaya-ku05.csv") # ""内に確認するファイル名を入力
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
#JASIDを整数型に
Setagaya.n %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
# 確認用
head()
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
head()
head(Setagaya.n)
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
head(Setagaya.n) # 確認用
LabelTemplate = import("ListLabel_template.csv", encoding = "UTF-8")
LabelList = names (Setagaya.n) #1行目を取得
LabelList #取得結果を表示
# 項目が過不足のチェック→過不足があればファイルを修正
if (length(LabelList) > length(LabelTemplate)){
print("多い")
} else if (length(LabelList) < length(LabelTemplate)){
print("不足")
} else {
print("OK")
}
# 多い場合の処理
# Setagaya.n <- select(Setagaya.n,-"取得住所")
Setagaya.n <- select(Setagaya.n,-"取得住所")
LabelTemplate = import("ListLabel_template.csv", encoding = "UTF-8")
LabelList = names (Setagaya.n) #1行目を取得
LabelList #取得結果を表示
# 項目が過不足のチェック→過不足があればファイルを修正
if (length(LabelList) > length(LabelTemplate)){
print("多い")
} else if (length(LabelList) < length(LabelTemplate)){
print("不足")
} else {
print("OK")
}
# 多い場合の処理
# Setagaya.n <- select(Setagaya.n,-"取得住所")
Setagaya.n <- select(Setagaya.n,-"取得住所")
Setagaya.n <- import("13112_Setagaya-ku05.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
head(Setagaya.n) # 確認用
LabelTemplate = import("ListLabel_template.csv", encoding = "UTF-8")
LabelList = names (Setagaya.n) #1行目を取得
LabelList #取得結果を表示
# 項目が過不足のチェック→過不足があればファイルを修正
if (length(LabelList) > length(LabelTemplate)){
print("多い")
} else if (length(LabelList) < length(LabelTemplate)){
print("不足")
} else {
print("OK")
}
# 多い場合の処理
# Setagaya.n <- select(Setagaya.n,-"取得住所")
Setagaya.n %>%
colnames() <- colnames(LabelTemplate) %>%  #対象の列名をLabelTemplateの列名に置換
colnames() #確認用
colnames(Setagaya.n) <- colnames(LabelTemplate) #対象の列名をLabelTemplateの列名に置換
colnames(Setagaya.n) #確認用
Setagaya.coord <- import("13112_Setagaya-ku05_coord.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB_coord.csv", setclass= "tbl_df")：AAAにBBB_coord.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB_coord = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
# 確認用
head(Setagaya.n)
nrow(Setagaya.n) #遺跡地図データの行数
nrow(Setagaya.coord) #座標データの行数
# チェック→不一致なら元データの確認と修正
if (nrow(Setagaya.n) == nrow(Setagaya.coord)){
print("OK")
} else {
print("不一致")
}
ctr <- 1:nrow(Setagaya.n) #行数だけ繰り返すカウンター
chk.counter <- 0 #TRUEカウンター
for (i in ctr){
if (Setagaya.n[i,1] == Setagaya.coord[i,1]){
chk.counter <- chk.counter + 1
} else {
print (chk.counter)
print ("不一致")
}
}
if (chk.counter == nrow(Setagaya.n)){
print("OK")
} else {
print("不一致")
}
Setagaya.coord <- select(Setagaya.coord,-JASID) #位置座標データからJASID列を削除
colnames(Setagaya.coord) <- c("経度","緯度") #位置座標データのラベルの正規化
Setagaya.comb <- cbind(Setagaya.n, Setagaya.coord)
Setagaya.comb %>%
head() %>%
colnames()
if(exists("Setagaya.total")){ #AAA.totalが存在している場合=2回目以降の実行の場合
before <- nrow(Setagaya.total) #統合前の行数=レコード数を取得
Setagaya.total <- rbind(Setagaya.total, Setagaya.comb)  #あらたに加工したリスト(AAA.comb)を全体リスト(AAA.total)に新規レコードとして追加
} else { #存在していない場合=最初の実行の場合
before <- 0  #統合前のレコード数は0
Setagaya.total <- Setagaya.comb #AAA.totalに遺跡地図情報+位置座標の統合リストを収納
}
after <- nrow(Setagaya.total) #統合後の行数=レコード数
def <- after - before
if (exists("incr")){
incr <- rbind(incr, data.frame(before,after,def))
} else {
incr <- data.frame(before,after,def)
}
incr #追加処理結果の表示: before=処理前のレコード数、after=処理後のレコード数、def=差分(増加数)
#JASIDを整数型に
Setagaya.total %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
#JASIDで整列
arrange(JASID) %>%
# 確認用
head()
View(Setagaya.total)
incr <- select(incr,-3)
incr
incr <- select(-3,)
incr
incr <- incr[-3]
incr
incr <- incr[-c(3)] # 行の削除
incr
incr
incr <- incr[-c(3)]
incr
incr <- incr[-c(3),] # 行の削除
incr
def = c(25,25)
def
incr <- cbind(incr,def)
incr
guess_encoding("13112_Setagaya-ku08.csv") # ""内に確認するファイル名を入力
Setagaya.n <- import("13112_Setagaya-ku08.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB.csv", setclass= "tbl_df")：AAAにBBB.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
head(Setagaya.n) # 確認用
LabelTemplate = import("ListLabel_template.csv", encoding = "UTF-8")
LabelList = names (Setagaya.n) #1行目を取得
LabelList #取得結果を表示
# 項目が過不足のチェック→過不足があればファイルを修正
if (length(LabelList) > length(LabelTemplate)){
print("多い")
} else if (length(LabelList) < length(LabelTemplate)){
print("不足")
} else {
print("OK")
}
# 多い場合の処理
# Setagaya.n <- select(Setagaya.n,-"取得住所")
colnames(Setagaya.n) <- colnames(LabelTemplate) #対象の列名をLabelTemplateの列名に置換
colnames(Setagaya.n) #確認用
Setagaya.coord <- import("13112_Setagaya-ku08_coord.csv", setclass= "tbl_df", encoding ="UTF-8")
# AAA <- import("BBB_coord.csv", setclass= "tbl_df")：AAAにBBB_coord.csvをテーブルとして(setclass = "tbl_df")読み込み
# AAA = 読み込み先のオブジェクト名(ここで指定)
# BBB_coord = 読み込み元のファイル名(ローカルリポジトリ内なのでファイル名のみ)
# encoding = "UTF-8"で文字コードを指定(シフトJISなら"CP932")
# 確認用
head(Setagaya.n)
nrow(Setagaya.n) #遺跡地図データの行数
nrow(Setagaya.coord) #座標データの行数
# チェック→不一致なら元データの確認と修正
if (nrow(Setagaya.n) == nrow(Setagaya.coord)){
print("OK")
} else {
print("不一致")
}
ctr <- 1:nrow(Setagaya.n) #行数だけ繰り返すカウンター
chk.counter <- 0 #TRUEカウンター
for (i in ctr){
if (Setagaya.n[i,1] == Setagaya.coord[i,1]){
chk.counter <- chk.counter + 1
} else {
print (chk.counter)
print ("不一致")
}
}
if (chk.counter == nrow(Setagaya.n)){
print("OK")
} else {
print("不一致")
}
Setagaya.coord <- select(Setagaya.coord,-JASID) #位置座標データからJASID列を削除
colnames(Setagaya.coord) <- c("経度","緯度") #位置座標データのラベルの正規化
Setagaya.comb <- cbind(Setagaya.n, Setagaya.coord)
Setagaya.comb %>%
head() %>%
colnames()
if(exists("Setagaya.total")){ #AAA.totalが存在している場合=2回目以降の実行の場合
before <- nrow(Setagaya.total) #統合前の行数=レコード数を取得
Setagaya.total <- rbind(Setagaya.total, Setagaya.comb)  #あらたに加工したリスト(AAA.comb)を全体リスト(AAA.total)に新規レコードとして追加
} else { #存在していない場合=最初の実行の場合
before <- 0  #統合前のレコード数は0
Setagaya.total <- Setagaya.comb #AAA.totalに遺跡地図情報+位置座標の統合リストを収納
}
after <- nrow(Setagaya.total) #統合後の行数=レコード数
def <- after - before
if (exists("incr")){
incr <- rbind(incr, data.frame(before,after,def))
} else {
incr <- data.frame(before,after,def)
}
incr #追加処理結果の表示: before=処理前のレコード数、after=処理後のレコード数、def=差分(増加数)
#JASIDを整数型に
Setagaya.total %>%
mutate_at(vars(JASID), funs(as.integer)) %>%
#JASIDで整列
arrange(JASID) %>%
# 確認用
head()
# incr <- incr[-c(3),] # 行の削除
write.csv(Setagaya.total, "Setagaya.total.csv")
View(Setagaya.total)
write.csv(Setagaya.total, "Setagaya.total.csv", fileEncoding = "CP932")
write.csv(Setagaya.total, "Setagaya.total.csv", fileEncoding = "UTF-8")
View(Setagaya.total)
Setagaya.n [192,]
Setagaya.n [190,]
Setagaya.n [1,]
Setagaya.total [192,]
Setagaya.n[117]
Setagaya.n[116]
Setagaya.n[116,]
Setagaya.total [192,]
Setagaya.n[117,]
Setagaya.comb [1,]
write.csv(Setagaya.n,"test")
write.csv(Setagaya.n,"test.csv")
write.csv(Setagaya.n,"test.csv")
write.csv(Setagaya.comb,"test2.csv")
getwd()
setwd("C:\Users\Atsushi Noguchi\Documents\GitHub\ChiikiKoukoB-2020\13Tokyo")
setwd("C:/Users/Atsushi Noguchi/Documents/GitHub/ChiikiKoukoB-2020/13Tokyo")
write.csv2(Setagaya.total,"test.csv")
write.table(Setagaya.n,"clipboard", fileEncoding = "UTF-8")
write.table(Setagaya.n,"test.csv", fileEncoding = "UTF-8")
View(Setagaya.total)
View(Setagaya.total)
print(Setagaya.total,120,)
print(Setagaya.total)
read.csv("13210_Koganei-shi.csv")
read.csv("13210_Koganei-shi.csv", fileEncoding = "UTF-8")
csv <- read.csv("13210_Koganei-shi.csv", fileEncoding = "UTF-8")
csv <- read.csv("13210_Koganei-shi.csv")
csv
head(csv)
names(csv)
csv <- import("13210_Setagaya-ku.csv")
csv <- import("13210_Koganei-shi.csv")
csv
csv <- import("13210_Koganei-shi.csv", encoding = "UTF-8")
csv
View(Setagaya.n)
View(Setagaya.total)
View(Setagaya.n)
View(Setagaya.total)
Setagaya.n <- import("13112_Setagaya-ku08.csv", setclass= "tbl_df", encoding ="UTF-8", as.is = T)
